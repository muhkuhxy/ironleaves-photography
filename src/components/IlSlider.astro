---
import IlSliderArrow from "./IlSliderArrow.astro"

type Props = {
  id: string
  class?: string
  slides: string[]
}

const { class: classes, slides, id } = Astro.props
---

<div id={id} class="relative h-full pb-8">
  <swiper-container
    data-swiper
    class:list={["w-full overflow-x-hidden", classes]}
    init="false"
    autoplay-delay="5000"
    loop="true"
    loop-additional-slides="5"
    space-between="2"
    slides-per-view="auto"
    centered-slides="true"
    slide-to-clicked-slide="true"
    navigation="true"
    navigation-prev-el={`#${id}-slide-prev`}
    navigation-next-el={`#${id}-slide-next`}
  >
    {
      slides.map((url) => (
        <swiper-slide class="flex !w-auto max-w-[90%] items-center">
          <img class="h-full object-cover" src={url} />
        </swiper-slide>
      ))
    }
  </swiper-container>
  <IlSliderArrow id={`${id}-slide-prev`} side="left" />
  <IlSliderArrow id={`${id}-slide-next`} side="right" />
</div>

<script>
  import { register } from "swiper/element/bundle"
  register()

  document.querySelectorAll("[data-swiper]").forEach((swiperElm) => {
    const swiperParams = {
      on: {
        afterInit() {
          setTimeout(() => {
            console.log("afterInit")
            if (swiperElm.querySelector(".swiper-slide-active:last-child")) {
              console.log("fixing")
              setTimeout(() => {
                this.update()
                this.slideToLoop(0, 0)
              }, 100)
            }
          })
        },
      },
    }
    Object.assign(swiperElm, swiperParams)
    swiperElm.initialize()
  })
</script>
