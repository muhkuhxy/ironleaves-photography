---
import type { Chapter } from "../lib/blog";
import IlSlider from "./IlSlider.astro";
import IlStoryTelling from "./IlStoryTelling.astro";
import LayoutSpacer from "./LayoutSpacer.astro";
import SectionContent from "./SectionContent.astro";

type Props = {
  slides: string[];
  chapters: Chapter[];
};

const { slides, chapters } = Astro.props;
---

<div class="text-bluegray pb-6" x-data="BlogStory">
  <div class="bg-dust">
    <SectionContent class="flex flex-col lg:flex-row items-center gap-8">
      <slot name="image" />
      <div
        class="lg:w-1/2 flex-initial text-center lg:text-left flex flex-col gap-4 max-w-prose mx-auto lg:mx-0"
      >
        <slot name="title" />
        <slot name="content" />
        <LayoutSpacer responsive={false} ms={1} />
      </div>
    </SectionContent>
  </div>
  <IlStoryTelling class="bg-white" chapters={chapters} />
  <div class="h-[50vh]">
    <IlSlider class="!pb-8 h-full" slides={slides} />
  </div>
</div>

<script>
  import Alpine from "alpinejs";
  import { ScrollTrigger } from "../lib/gsap";
  import { reactiveBreakpoints } from "../lib/breakpoints";

  Alpine.data("BlogStory", () => ({
    breakpoints: reactiveBreakpoints,
    chaptersActive: [true],
    init() {
      this.$nextTick(() => {
        const chapters = Array.from(
          this.$el.querySelectorAll("[data-chapter]")
        );
        this.chaptersActive = chapters.map((chapter) => false);
        chapters.forEach((chapter, index, array) => {
          const activate: ScrollTrigger.Callback = (self) => {
            this.chaptersActive[index] = self.isActive;
          };
          const onLeave = index === array.length - 1 ? undefined : activate;
          const onLeaveBack = index === 0 ? undefined : activate;
          ScrollTrigger.create({
            // markers: true,
            trigger: chapter,
            start: index === 0 ? "top bottom" : "center bottom",
            end: "center top",
            onEnter: activate,
            onLeave,
            onEnterBack: activate,
            onLeaveBack,
          });
        });
      });
    },
  }));
</script>
